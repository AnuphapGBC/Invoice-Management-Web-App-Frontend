{"ast":null,"code":"var _jsxFileName = \"/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/pages/InvoiceManagement.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\nimport InvoiceFormPopup from './InvoiceFormPopup';\nimport './InvoiceManagement.css';\nconst InvoiceManagement = () => {\n  const [invoices, setInvoices] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  const [userEmail, setUserEmail] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [showMailPopup, setShowMailPopup] = useState(false);\n  const [popupMode, setPopupMode] = useState(''); // 'add', 'edit', 'delete', or 'send'\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [receiptTypes] = useState(['Invoice', 'Gas', 'Support Office', 'Other']);\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/invoices');\n        if (response.data && Array.isArray(response.data.invoices)) {\n          const formattedInvoices = response.data.invoices.map(invoice => ({\n            ...invoice,\n            date: invoice.date.split('T')[0] // Extract only yyyy-mm-dd from date\n          }));\n          setInvoices(formattedInvoices);\n        } else {\n          console.error('Unexpected response format', response.data);\n          setInvoices([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch invoices', error);\n      }\n    };\n    const fetchUserEmail = async () => {\n      if (user === null || user === void 0 ? void 0 : user.username) {\n        // for debuging\n        // console.log('Fetching email for user:', user.username);\n        try {\n          const response = await axios.get(`http://localhost:5001/api/users/username/${user.username}`);\n          if (response.data && response.data.user) {\n            setUserEmail(response.data.user.email);\n          } else {\n            console.error('User email not found');\n          }\n        } catch (error) {\n          console.error('Failed to fetch user email', error);\n        }\n      }\n    };\n    fetchInvoices();\n    fetchUserEmail();\n  }, [user]);\n  const handleAddInvoice = async invoice => {\n    try {\n      const formData = new FormData();\n      for (const key in invoice) {\n        if (key === 'images' && invoice.images.length > 0) {\n          invoice.images.forEach(image => formData.append('images', image));\n        } else {\n          formData.append(key, invoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info\n      formData.append('createdBy', (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user.id) || 'Unknown');\n      const response = await axios.post('http://localhost:5001/api/invoices', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice added successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to add invoice', error);\n    }\n  };\n  const handleEditInvoice = invoice => {\n    setSelectedInvoice(invoice);\n    setPopupMode('edit');\n    setShowPopup(true);\n  };\n  const handleUpdateInvoice = async updatedInvoice => {\n    try {\n      const formData = new FormData();\n      for (const key in updatedInvoice) {\n        if (key === 'images' && updatedInvoice.images.length > 0) {\n          updatedInvoice.images.forEach(image => formData.append('images', image));\n        } else {\n          formData.append(key, updatedInvoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info if not already set\n      if (!updatedInvoice.createdBy) {\n        formData.append('createdBy', (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user.id) || 'Unknown');\n      }\n      const response = await axios.put(`http://localhost:5001/api/invoices/${updatedInvoice.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice updated successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to update invoice', error);\n    }\n  };\n  const handleDeleteInvoice = async id => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this invoice?');\n    if (confirmDelete) {\n      try {\n        const response = await axios.delete(`http://localhost:5001/api/invoices/${id}`);\n        if (response.data && response.data.success) {\n          alert('Invoice deleted successfully!');\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error('Failed to delete invoice', error);\n      }\n    }\n  };\n  const handleSendMail = invoice => {\n    setSelectedInvoice(invoice);\n    setPopupMode('send');\n    setShowMailPopup(true);\n  };\n  const handleSendMailSubmit = async () => {\n    console.log('Email from:', userEmail);\n    try {\n      if (!userEmail) {\n        console.error('User email is missing. Cannot send email.');\n        alert('Failed to send email. User email is missing.');\n        return;\n      }\n\n      // Step 1: Fetch the images for the selected invoice\n      let attachments = [];\n      if (selectedInvoice && selectedInvoice.id) {\n        try {\n          const imagesResponse = await axios.get(`http://localhost:5001/api/invoices/${selectedInvoice.id}/images`);\n          console.log('imagesResponse', imagesResponse.data.images);\n          if (imagesResponse.data && Array.isArray(imagesResponse.data.images)) {\n            // Iterate over each imageUrl to fetch the actual image data\n            for (const image of imagesResponse.data.images) {\n              const imageUrl = `http://localhost:5001/${image.imageUrl}`; // Construct the full image URL\n\n              // Fetch the image binary data\n              const imageResponse = await axios.get(imageUrl, {\n                responseType: 'arraybuffer' // Expect binary data as response\n              });\n              if (imageResponse.status === 200) {\n                attachments.push({\n                  filename: imageUrl.split('/').pop(),\n                  // Extract the filename from the URL\n                  content: Buffer.from(imageResponse.data, 'binary').toString('base64'),\n                  // Convert binary to base64\n                  encoding: 'base64'\n                });\n              } else {\n                console.error(`Failed to fetch image from URL: ${imageUrl}`);\n              }\n            }\n          } else {\n            console.error('No images found for this invoice');\n          }\n        } catch (imagesError) {\n          console.error('Failed to fetch images for the invoice', imagesError);\n        }\n      }\n\n      // Step 2: Prepare email data with attachments\n      const emailData = {\n        from: userEmail,\n        // Use the fetched email\n        to: recipientEmail,\n        subject: `Summary Receipt Number (${selectedInvoice.receiptNumber}) and Invoice Number (${selectedInvoice.invoiceNumber})`,\n        body: `Here are the details of the invoice:\\n\\nReceipt Number: ${selectedInvoice.receiptNumber}\\nInvoice Number: ${selectedInvoice.invoiceNumber}\\nDate: ${selectedInvoice.date}\\nTime: ${selectedInvoice.time}\\nReceipt Type: ${selectedInvoice.receiptType}\\nNarrative: ${selectedInvoice.narrative}\\nAmount: ${selectedInvoice.amount}\\nCurrency: ${selectedInvoice.currency}`,\n        invoiceId: selectedInvoice.id,\n        // Include the invoice ID for reference\n        attachments: attachments // Include the images as attachments\n      };\n      console.log('Sending email with payload:', emailData);\n\n      // Step 3: Send the email\n      const response = await axios.post('http://localhost:5001/api/send-mail', emailData);\n      if (response.data && response.data.success) {\n        alert('Email sent successfully!');\n        setShowMailPopup(false);\n      } else {\n        alert('Failed to send email.');\n      }\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('An error occurred while sending the email.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Invoices\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-invoice-button fancy-button\",\n    onClick: () => {\n      setPopupMode('add');\n      setShowPopup(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, \"Add Invoice\"), showPopup && /*#__PURE__*/React.createElement(InvoiceFormPopup, {\n    invoice: popupMode === 'edit' ? selectedInvoice : null,\n    onSave: popupMode === 'add' ? handleAddInvoice : handleUpdateInvoice,\n    onClose: () => setShowPopup(false),\n    receiptTypes: receiptTypes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), showMailPopup && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay fancy-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup fancy-popup-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, \"Send Invoice Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"recipientEmail\",\n    placeholder: \"Recipient Email\",\n    value: recipientEmail,\n    onChange: e => setRecipientEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSendMailSubmit,\n    className: \"fancy-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, \"Send Email\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowMailPopup(false),\n    className: \"fancy-button cancel-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"invoice-table fancy-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Invoice Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, \"Receipt Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"Receipt Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, \"Narrative\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"Currency\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, invoices.map(invoice => /*#__PURE__*/React.createElement(\"tr\", {\n    key: invoice.id,\n    className: \"fancy-table-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, invoice.invoiceNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, invoice.receiptNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, invoice.date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, invoice.time), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, invoice.receiptType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, invoice.narrative), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, invoice.amount), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, invoice.currency), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, (user === null || user === void 0 ? void 0 : user.role) !== 'viewer' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fancy-button edit-button\",\n    onClick: () => handleEditInvoice(invoice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fancy-button delete-button\",\n    onClick: () => handleDeleteInvoice(invoice.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fancy-button mail-button\",\n    onClick: () => handleSendMail(invoice),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, \"Send Mail\"))))))));\n};\nexport default InvoiceManagement;","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","UserContext","InvoiceFormPopup","InvoiceManagement","invoices","setInvoices","user","userEmail","setUserEmail","showPopup","setShowPopup","showMailPopup","setShowMailPopup","popupMode","setPopupMode","selectedInvoice","setSelectedInvoice","recipientEmail","setRecipientEmail","receiptTypes","fetchInvoices","response","get","data","Array","isArray","formattedInvoices","map","invoice","date","split","console","error","fetchUserEmail","username","email","handleAddInvoice","formData","FormData","key","images","length","forEach","image","append","id","post","headers","success","alert","window","location","reload","handleEditInvoice","handleUpdateInvoice","updatedInvoice","createdBy","put","handleDeleteInvoice","confirmDelete","confirm","delete","handleSendMail","handleSendMailSubmit","log","attachments","imagesResponse","imageUrl","imageResponse","responseType","status","push","filename","pop","content","Buffer","from","toString","encoding","imagesError","emailData","to","subject","receiptNumber","invoiceNumber","body","time","receiptType","narrative","amount","currency","invoiceId","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","onClose","type","name","placeholder","value","onChange","e","target","role"],"sources":["/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/pages/InvoiceManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\nimport InvoiceFormPopup from './InvoiceFormPopup';\nimport './InvoiceManagement.css';\n\nconst InvoiceManagement = () => {\n  const [invoices, setInvoices] = useState([]);\n  const { user } = useContext(UserContext);\n  const [userEmail, setUserEmail] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [showMailPopup, setShowMailPopup] = useState(false);\n  const [popupMode, setPopupMode] = useState(''); // 'add', 'edit', 'delete', or 'send'\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [receiptTypes] = useState(['Invoice', 'Gas', 'Support Office', 'Other']);\n\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/invoices');\n        if (response.data && Array.isArray(response.data.invoices)) {\n          const formattedInvoices = response.data.invoices.map((invoice) => ({\n            ...invoice,\n            date: invoice.date.split('T')[0], // Extract only yyyy-mm-dd from date\n          }));\n          setInvoices(formattedInvoices);\n        } else {\n          console.error('Unexpected response format', response.data);\n          setInvoices([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch invoices', error);\n      }\n    };\n\n    const fetchUserEmail = async () => {\n      if (user?.username) {\n        // for debuging\n        // console.log('Fetching email for user:', user.username);\n        try {\n          const response = await axios.get(`http://localhost:5001/api/users/username/${user.username}`);\n          if (response.data && response.data.user) {\n            setUserEmail(response.data.user.email);\n          } else {\n            console.error('User email not found');\n          }\n        } catch (error) {\n          console.error('Failed to fetch user email', error);\n        }\n      }\n    };\n\n    fetchInvoices();\n    fetchUserEmail();\n  }, [user]);\n\n  const handleAddInvoice = async (invoice) => {\n    try {\n      const formData = new FormData();\n      for (const key in invoice) {\n        if (key === 'images' && invoice.images.length > 0) {\n          invoice.images.forEach((image) => formData.append('images', image));\n        } else {\n          formData.append(key, invoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info\n      formData.append('createdBy', user?.username || user?.id || 'Unknown');\n\n      const response = await axios.post('http://localhost:5001/api/invoices', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice added successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to add invoice', error);\n    }\n  };\n\n  const handleEditInvoice = (invoice) => {\n    setSelectedInvoice(invoice);\n    setPopupMode('edit');\n    setShowPopup(true);\n  };\n\n  const handleUpdateInvoice = async (updatedInvoice) => {\n    try {\n      const formData = new FormData();\n      for (const key in updatedInvoice) {\n        if (key === 'images' && updatedInvoice.images.length > 0) {\n          updatedInvoice.images.forEach((image) => formData.append('images', image));\n        } else {\n          formData.append(key, updatedInvoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info if not already set\n      if (!updatedInvoice.createdBy) {\n        formData.append('createdBy', user?.username || user?.id || 'Unknown');\n      }\n\n      const response = await axios.put(`http://localhost:5001/api/invoices/${updatedInvoice.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice updated successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to update invoice', error);\n    }\n  };\n\n  const handleDeleteInvoice = async (id) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this invoice?');\n    if (confirmDelete) {\n      try {\n        const response = await axios.delete(`http://localhost:5001/api/invoices/${id}`);\n        if (response.data && response.data.success) {\n          alert('Invoice deleted successfully!');\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error('Failed to delete invoice', error);\n      }\n    }\n  };\n\n  const handleSendMail = (invoice) => {\n    setSelectedInvoice(invoice);\n    setPopupMode('send');\n    setShowMailPopup(true);\n  };\n\n  const handleSendMailSubmit = async () => {\n    console.log('Email from:', userEmail);\n    try {\n      if (!userEmail) {\n        console.error('User email is missing. Cannot send email.');\n        alert('Failed to send email. User email is missing.');\n        return;\n      }\n  \n      // Step 1: Fetch the images for the selected invoice\n      let attachments = [];\n      if (selectedInvoice && selectedInvoice.id) {\n        try {\n          const imagesResponse = await axios.get(`http://localhost:5001/api/invoices/${selectedInvoice.id}/images`);\n          \n          console.log('imagesResponse', imagesResponse.data.images);\n          if (imagesResponse.data && Array.isArray(imagesResponse.data.images)) {\n            // Iterate over each imageUrl to fetch the actual image data\n            for (const image of imagesResponse.data.images) {\n              const imageUrl = `http://localhost:5001/${image.imageUrl}`; // Construct the full image URL\n  \n              // Fetch the image binary data\n              const imageResponse = await axios.get(imageUrl, {\n                responseType: 'arraybuffer', // Expect binary data as response\n              });\n  \n              if (imageResponse.status === 200) {\n                attachments.push({\n                  filename: imageUrl.split('/').pop(), // Extract the filename from the URL\n                  content: Buffer.from(imageResponse.data, 'binary').toString('base64'), // Convert binary to base64\n                  encoding: 'base64',\n                });\n              } else {\n                console.error(`Failed to fetch image from URL: ${imageUrl}`);\n              }\n            }\n          } else {\n            console.error('No images found for this invoice');\n          }\n        } catch (imagesError) {\n          console.error('Failed to fetch images for the invoice', imagesError);\n        }\n      }\n  \n      // Step 2: Prepare email data with attachments\n      const emailData = {\n        from: userEmail, // Use the fetched email\n        to: recipientEmail,\n        subject: `Summary Receipt Number (${selectedInvoice.receiptNumber}) and Invoice Number (${selectedInvoice.invoiceNumber})`,\n        body: `Here are the details of the invoice:\\n\\nReceipt Number: ${selectedInvoice.receiptNumber}\\nInvoice Number: ${selectedInvoice.invoiceNumber}\\nDate: ${selectedInvoice.date}\\nTime: ${selectedInvoice.time}\\nReceipt Type: ${selectedInvoice.receiptType}\\nNarrative: ${selectedInvoice.narrative}\\nAmount: ${selectedInvoice.amount}\\nCurrency: ${selectedInvoice.currency}`,\n        invoiceId: selectedInvoice.id, // Include the invoice ID for reference\n        attachments: attachments, // Include the images as attachments\n      };\n  \n      console.log('Sending email with payload:', emailData);\n  \n      // Step 3: Send the email\n      const response = await axios.post('http://localhost:5001/api/send-mail', emailData);\n      if (response.data && response.data.success) {\n        alert('Email sent successfully!');\n        setShowMailPopup(false);\n      } else {\n        alert('Failed to send email.');\n      }\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('An error occurred while sending the email.');\n    }\n  };\n  \n\n  return (\n    <div className=\"invoice-container\">\n      <h2>Invoices</h2>\n      <button className=\"add-invoice-button fancy-button\" onClick={() => { setPopupMode('add'); setShowPopup(true); }}>Add Invoice</button>\n\n      {showPopup && (\n        <InvoiceFormPopup\n          invoice={popupMode === 'edit' ? selectedInvoice : null}\n          onSave={popupMode === 'add' ? handleAddInvoice : handleUpdateInvoice}\n          onClose={() => setShowPopup(false)}\n          receiptTypes={receiptTypes}\n        />\n      )}\n\n      {showMailPopup && (\n        <div className=\"popup-overlay fancy-popup\">\n          <div className=\"popup fancy-popup-window\">\n            <h3>Send Invoice Email</h3>\n            <input\n              type=\"email\"\n              name=\"recipientEmail\"\n              placeholder=\"Recipient Email\"\n              value={recipientEmail}\n              onChange={(e) => setRecipientEmail(e.target.value)}\n            />\n            <div className=\"popup-buttons\">\n              <button onClick={handleSendMailSubmit} className=\"fancy-button\">Send Email</button>\n              <button onClick={() => setShowMailPopup(false)} className=\"fancy-button cancel-button\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <table className=\"invoice-table fancy-table\">\n        <thead>\n          <tr>\n            <th>Invoice Number</th>\n            <th>Receipt Number</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Receipt Type</th>\n            <th>Narrative</th>\n            <th>Amount</th>\n            <th>Currency</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {invoices.map((invoice) => (\n            <tr key={invoice.id} className=\"fancy-table-row\">\n              <td>{invoice.invoiceNumber}</td>\n              <td>{invoice.receiptNumber}</td>\n              <td>{invoice.date}</td>\n              <td>{invoice.time}</td>\n              <td>{invoice.receiptType}</td>\n              <td>{invoice.narrative}</td>\n              <td>{invoice.amount}</td>\n              <td>{invoice.currency}</td>\n              <td>\n                {user?.role !== 'viewer' && (\n                  <div className=\"action-buttons\">\n                    <button className=\"fancy-button edit-button\" onClick={() => handleEditInvoice(invoice)}>Edit</button>\n                    <button className=\"fancy-button delete-button\" onClick={() => handleDeleteInvoice(invoice.id)}>Delete</button>\n                    <button className=\"fancy-button mail-button\" onClick={() => handleSendMail(invoice)}>Send Mail</button>\n                  </div>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default InvoiceManagement;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,yBAAyB;AAEhC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAES;EAAK,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACd,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,oCAAoC,CAAC;QACtE,IAAID,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAAC,EAAE;UAC1D,MAAMsB,iBAAiB,GAAGL,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAACuB,GAAG,CAAEC,OAAO,KAAM;YACjE,GAAGA,OAAO;YACVC,IAAI,EAAED,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;UACpC,CAAC,CAAC,CAAC;UACHzB,WAAW,CAACqB,iBAAiB,CAAC;QAChC,CAAC,MAAM;UACLK,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEX,QAAQ,CAACE,IAAI,CAAC;UAC1DlB,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,CAAC,OAAO2B,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI3B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4B,QAAQ,EAAE;QAClB;QACA;QACA,IAAI;UACF,MAAMb,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,4CAA4ChB,IAAI,CAAC4B,QAAQ,EAAE,CAAC;UAC7F,IAAIb,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACjB,IAAI,EAAE;YACvCE,YAAY,CAACa,QAAQ,CAACE,IAAI,CAACjB,IAAI,CAAC6B,KAAK,CAAC;UACxC,CAAC,MAAM;YACLJ,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;UACvC;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF;IACF,CAAC;IAEDZ,aAAa,CAAC,CAAC;IACfa,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC3B,IAAI,CAAC,CAAC;EAEV,MAAM8B,gBAAgB,GAAG,MAAOR,OAAO,IAAK;IAC1C,IAAI;MACF,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/B,KAAK,MAAMC,GAAG,IAAIX,OAAO,EAAE;QACzB,IAAIW,GAAG,KAAK,QAAQ,IAAIX,OAAO,CAACY,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACjDb,OAAO,CAACY,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAKN,QAAQ,CAACO,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC;QACrE,CAAC,MAAM;UACLN,QAAQ,CAACO,MAAM,CAACL,GAAG,EAAEX,OAAO,CAACW,GAAG,CAAC,CAAC;QACpC;MACF;;MAEA;MACAF,QAAQ,CAACO,MAAM,CAAC,WAAW,EAAE,CAAAtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4B,QAAQ,MAAI5B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuC,EAAE,KAAI,SAAS,CAAC;MAErE,MAAMxB,QAAQ,GAAG,MAAMrB,KAAK,CAAC8C,IAAI,CAAC,oCAAoC,EAAET,QAAQ,EAAE;QAChFU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI1B,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACyB,OAAO,EAAE;QAC1CC,KAAK,CAAC,6BAA6B,CAAC;QACpCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMqB,iBAAiB,GAAIzB,OAAO,IAAK;IACrCZ,kBAAkB,CAACY,OAAO,CAAC;IAC3Bd,YAAY,CAAC,MAAM,CAAC;IACpBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM4C,mBAAmB,GAAG,MAAOC,cAAc,IAAK;IACpD,IAAI;MACF,MAAMlB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/B,KAAK,MAAMC,GAAG,IAAIgB,cAAc,EAAE;QAChC,IAAIhB,GAAG,KAAK,QAAQ,IAAIgB,cAAc,CAACf,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACxDc,cAAc,CAACf,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAKN,QAAQ,CAACO,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC;QAC5E,CAAC,MAAM;UACLN,QAAQ,CAACO,MAAM,CAACL,GAAG,EAAEgB,cAAc,CAAChB,GAAG,CAAC,CAAC;QAC3C;MACF;;MAEA;MACA,IAAI,CAACgB,cAAc,CAACC,SAAS,EAAE;QAC7BnB,QAAQ,CAACO,MAAM,CAAC,WAAW,EAAE,CAAAtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4B,QAAQ,MAAI5B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuC,EAAE,KAAI,SAAS,CAAC;MACvE;MAEA,MAAMxB,QAAQ,GAAG,MAAMrB,KAAK,CAACyD,GAAG,CAAC,sCAAsCF,cAAc,CAACV,EAAE,EAAE,EAAER,QAAQ,EAAE;QACpGU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI1B,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACyB,OAAO,EAAE;QAC1CC,KAAK,CAAC,+BAA+B,CAAC;QACtCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAM0B,mBAAmB,GAAG,MAAOb,EAAE,IAAK;IACxC,MAAMc,aAAa,GAAGT,MAAM,CAACU,OAAO,CAAC,+CAA+C,CAAC;IACrF,IAAID,aAAa,EAAE;MACjB,IAAI;QACF,MAAMtC,QAAQ,GAAG,MAAMrB,KAAK,CAAC6D,MAAM,CAAC,sCAAsChB,EAAE,EAAE,CAAC;QAC/E,IAAIxB,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACyB,OAAO,EAAE;UAC1CC,KAAK,CAAC,+BAA+B,CAAC;UACtCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAED,MAAM8B,cAAc,GAAIlC,OAAO,IAAK;IAClCZ,kBAAkB,CAACY,OAAO,CAAC;IAC3Bd,YAAY,CAAC,MAAM,CAAC;IACpBF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMmD,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvChC,OAAO,CAACiC,GAAG,CAAC,aAAa,EAAEzD,SAAS,CAAC;IACrC,IAAI;MACF,IAAI,CAACA,SAAS,EAAE;QACdwB,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;QAC1DiB,KAAK,CAAC,8CAA8C,CAAC;QACrD;MACF;;MAEA;MACA,IAAIgB,WAAW,GAAG,EAAE;MACpB,IAAIlD,eAAe,IAAIA,eAAe,CAAC8B,EAAE,EAAE;QACzC,IAAI;UACF,MAAMqB,cAAc,GAAG,MAAMlE,KAAK,CAACsB,GAAG,CAAC,sCAAsCP,eAAe,CAAC8B,EAAE,SAAS,CAAC;UAEzGd,OAAO,CAACiC,GAAG,CAAC,gBAAgB,EAAEE,cAAc,CAAC3C,IAAI,CAACiB,MAAM,CAAC;UACzD,IAAI0B,cAAc,CAAC3C,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACyC,cAAc,CAAC3C,IAAI,CAACiB,MAAM,CAAC,EAAE;YACpE;YACA,KAAK,MAAMG,KAAK,IAAIuB,cAAc,CAAC3C,IAAI,CAACiB,MAAM,EAAE;cAC9C,MAAM2B,QAAQ,GAAG,yBAAyBxB,KAAK,CAACwB,QAAQ,EAAE,CAAC,CAAC;;cAE5D;cACA,MAAMC,aAAa,GAAG,MAAMpE,KAAK,CAACsB,GAAG,CAAC6C,QAAQ,EAAE;gBAC9CE,YAAY,EAAE,aAAa,CAAE;cAC/B,CAAC,CAAC;cAEF,IAAID,aAAa,CAACE,MAAM,KAAK,GAAG,EAAE;gBAChCL,WAAW,CAACM,IAAI,CAAC;kBACfC,QAAQ,EAAEL,QAAQ,CAACrC,KAAK,CAAC,GAAG,CAAC,CAAC2C,GAAG,CAAC,CAAC;kBAAE;kBACrCC,OAAO,EAAEC,MAAM,CAACC,IAAI,CAACR,aAAa,CAAC7C,IAAI,EAAE,QAAQ,CAAC,CAACsD,QAAQ,CAAC,QAAQ,CAAC;kBAAE;kBACvEC,QAAQ,EAAE;gBACZ,CAAC,CAAC;cACJ,CAAC,MAAM;gBACL/C,OAAO,CAACC,KAAK,CAAC,mCAAmCmC,QAAQ,EAAE,CAAC;cAC9D;YACF;UACF,CAAC,MAAM;YACLpC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;UACnD;QACF,CAAC,CAAC,OAAO+C,WAAW,EAAE;UACpBhD,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAE+C,WAAW,CAAC;QACtE;MACF;;MAEA;MACA,MAAMC,SAAS,GAAG;QAChBJ,IAAI,EAAErE,SAAS;QAAE;QACjB0E,EAAE,EAAEhE,cAAc;QAClBiE,OAAO,EAAE,2BAA2BnE,eAAe,CAACoE,aAAa,yBAAyBpE,eAAe,CAACqE,aAAa,GAAG;QAC1HC,IAAI,EAAE,2DAA2DtE,eAAe,CAACoE,aAAa,qBAAqBpE,eAAe,CAACqE,aAAa,WAAWrE,eAAe,CAACc,IAAI,WAAWd,eAAe,CAACuE,IAAI,mBAAmBvE,eAAe,CAACwE,WAAW,gBAAgBxE,eAAe,CAACyE,SAAS,aAAazE,eAAe,CAAC0E,MAAM,eAAe1E,eAAe,CAAC2E,QAAQ,EAAE;QACjXC,SAAS,EAAE5E,eAAe,CAAC8B,EAAE;QAAE;QAC/BoB,WAAW,EAAEA,WAAW,CAAE;MAC5B,CAAC;MAEDlC,OAAO,CAACiC,GAAG,CAAC,6BAA6B,EAAEgB,SAAS,CAAC;;MAErD;MACA,MAAM3D,QAAQ,GAAG,MAAMrB,KAAK,CAAC8C,IAAI,CAAC,qCAAqC,EAAEkC,SAAS,CAAC;MACnF,IAAI3D,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACyB,OAAO,EAAE;QAC1CC,KAAK,CAAC,0BAA0B,CAAC;QACjCrC,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLqC,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CiB,KAAK,CAAC,4CAA4C,CAAC;IACrD;EACF,CAAC;EAGD,oBACErD,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBvG,KAAA,CAAAgG,aAAA;IAAQC,SAAS,EAAC,iCAAiC;IAACO,OAAO,EAAEA,CAAA,KAAM;MAAEtF,YAAY,CAAC,KAAK,CAAC;MAAEJ,YAAY,CAAC,IAAI,CAAC;IAAE,CAAE;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CAAC,EAEpI1F,SAAS,iBACRb,KAAA,CAAAgG,aAAA,CAAC1F,gBAAgB;IACf0B,OAAO,EAAEf,SAAS,KAAK,MAAM,GAAGE,eAAe,GAAG,IAAK;IACvDsF,MAAM,EAAExF,SAAS,KAAK,KAAK,GAAGuB,gBAAgB,GAAGkB,mBAAoB;IACrEgD,OAAO,EAAEA,CAAA,KAAM5F,YAAY,CAAC,KAAK,CAAE;IACnCS,YAAY,EAAEA,YAAa;IAAA2E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CACF,EAEAxF,aAAa,iBACZf,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,0BAA0B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAsB,CAAC,eAC3BvG,KAAA,CAAAgG,aAAA;IACEW,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,gBAAgB;IACrBC,WAAW,EAAC,iBAAiB;IAC7BC,KAAK,EAAEzF,cAAe;IACtB0F,QAAQ,EAAGC,CAAC,IAAK1F,iBAAiB,CAAC0F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpD,CAAC,eACFvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BvG,KAAA,CAAAgG,aAAA;IAAQQ,OAAO,EAAErC,oBAAqB;IAAC8B,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAkB,CAAC,eACnFvG,KAAA,CAAAgG,aAAA;IAAQQ,OAAO,EAAEA,CAAA,KAAMxF,gBAAgB,CAAC,KAAK,CAAE;IAACiF,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAClG,CACF,CACF,CACN,eAEDvG,KAAA,CAAAgG,aAAA;IAAOC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1CvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CAAC,eACvBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gBAAkB,CAAC,eACvBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eACbvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,eACbvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,QAAU,CAAC,eACfvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,SAAW,CACb,CACC,CAAC,eACRvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG/F,QAAQ,CAACuB,GAAG,CAAEC,OAAO,iBACpBhC,KAAA,CAAAgG,aAAA;IAAIrD,GAAG,EAAEX,OAAO,CAACiB,EAAG;IAACgD,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9CvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAACwD,aAAkB,CAAC,eAChCxF,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAACuD,aAAkB,CAAC,eAChCvF,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAACC,IAAS,CAAC,eACvBjC,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAAC0D,IAAS,CAAC,eACvB1F,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAAC2D,WAAgB,CAAC,eAC9B3F,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAAC4D,SAAc,CAAC,eAC5B5F,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAAC6D,MAAW,CAAC,eACzB7F,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvE,OAAO,CAAC8D,QAAa,CAAC,eAC3B9F,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG,CAAA7F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEwG,IAAI,MAAK,QAAQ,iBACtBlH,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BvG,KAAA,CAAAgG,aAAA;IAAQC,SAAS,EAAC,0BAA0B;IAACO,OAAO,EAAEA,CAAA,KAAM/C,iBAAiB,CAACzB,OAAO,CAAE;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAAC,eACrGvG,KAAA,CAAAgG,aAAA;IAAQC,SAAS,EAAC,4BAA4B;IAACO,OAAO,EAAEA,CAAA,KAAM1C,mBAAmB,CAAC9B,OAAO,CAACiB,EAAE,CAAE;IAAAiD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CAAC,eAC9GvG,KAAA,CAAAgG,aAAA;IAAQC,SAAS,EAAC,0BAA0B;IAACO,OAAO,EAAEA,CAAA,KAAMtC,cAAc,CAAClC,OAAO,CAAE;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAiB,CACnG,CAEL,CACF,CACL,CACI,CACF,CACJ,CAAC;AAEV,CAAC;AAED,eAAehG,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}