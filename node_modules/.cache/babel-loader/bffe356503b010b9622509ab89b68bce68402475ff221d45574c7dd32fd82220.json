{"ast":null,"code":"var _jsxFileName = \"/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/login', {\n        username,\n        password\n      });\n      if (response.data.success) {\n        console.log(\"User logged in successfully:\", response.data.user); // Add debug log\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        window.location.href = '/invoices';\n      } else {\n        setSnackbarMessage('Login failed. Please check your credentials.');\n        setIsSnackbarOpen(true);\n      }\n    } catch (error) {\n      setSnackbarMessage('Login failed. Please check your credentials.');\n      setIsSnackbarOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: isSnackbarOpen,\n      message: snackbarMessage,\n      autoHideDuration: 6000,\n      onClose: () => setIsSnackbarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Uhc9LFfcZSd+FkVprxL6ZivvEKA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Snackbar","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","snackbarMessage","setSnackbarMessage","isSnackbarOpen","setIsSnackbarOpen","handleLogin","response","post","data","success","console","log","user","localStorage","setItem","JSON","stringify","window","location","href","error","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","margin","type","variant","color","onClick","open","message","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/login', { username, password });\n      if (response.data.success) {\n        console.log(\"User logged in successfully:\", response.data.user); // Add debug log\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        window.location.href = '/invoices';\n      } else {\n        setSnackbarMessage('Login failed. Please check your credentials.');\n        setIsSnackbarOpen(true);\n      }\n    } catch (error) {\n      setSnackbarMessage('Login failed. Please check your credentials.');\n      setIsSnackbarOpen(true);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <TextField \n        label=\"Username\" \n        value={username} \n        onChange={(e) => setUsername(e.target.value)} \n        fullWidth \n        margin=\"normal\" \n      />\n      <TextField \n        label=\"Password\" \n        type=\"password\" \n        value={password} \n        onChange={(e) => setPassword(e.target.value)} \n        fullWidth \n        margin=\"normal\" \n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\n        Login\n      </Button>\n      <Snackbar\n        open={isSnackbarOpen}\n        message={snackbarMessage}\n        autoHideDuration={6000}\n        onClose={() => setIsSnackbarOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}