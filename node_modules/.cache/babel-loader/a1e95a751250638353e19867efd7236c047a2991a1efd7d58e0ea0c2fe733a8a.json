{"ast":null,"code":"var _jsxFileName = \"/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/components/PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  allowedRoles,\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  if (!user) {\n    // User not logged in, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // User does not have permission, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated and has the correct role, render the children\n  return children;\n};\n_s(PrivateRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","UserContext","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","children","_s","user","to","fileName","_jsxFileName","lineNumber","columnNumber","includes","role","_c","$RefreshReg$"],"sources":["/Users/bng-anuphap_c/Projects/Invoice Management/frontend/src/components/PrivateRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\n\nconst PrivateRoute = ({ allowedRoles, children }) => {\n  const { user } = useContext(UserContext);\n\n  if (!user) {\n    // User not logged in, redirect to login page\n    return <Navigate to=\"/\" />;\n  }\n\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // User does not have permission, redirect to login page\n    return <Navigate to=\"/\" />;\n  }\n\n  // User is authenticated and has the correct role, render the children\n  return children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAExC,IAAI,CAACO,IAAI,EAAE;IACT;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,IAAIR,YAAY,IAAI,CAACA,YAAY,CAACS,QAAQ,CAACN,IAAI,CAACO,IAAI,CAAC,EAAE;IACrD;IACA,oBAAOZ,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;;EAEA;EACA,OAAOP,QAAQ;AACjB,CAAC;AAACC,EAAA,CAfIH,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}