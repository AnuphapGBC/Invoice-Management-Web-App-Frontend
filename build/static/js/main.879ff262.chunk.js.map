{"version":3,"sources":["pages/LoginPage.jsx","context/UserContext.jsx","pages/InvoiceFormPopup.jsx","pages/InvoiceManagement.jsx","pages/UserManagement.jsx","components/PrivateRoute.jsx","components/Navbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LoginPage","_ref","setUser","username","setUsername","useState","password","setPassword","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","response","axios","post","data","success","localStorage","setItem","JSON","stringify","user","alert","error","console","type","value","onChange","target","placeholder","required","UserContext","createContext","InvoiceFormPopup","invoice","onSave","onClose","receiptTypes","formInvoice","setFormInvoice","invoiceNumber","receiptNumber","date","time","receiptType","narrative","amount","currency","images","existingImages","targetCurrency","conversionRate","convertedAmount","fullScreenImage","setFullScreenImage","imageToDelete","setImageToDelete","availableCurrencies","useEffect","get","id","prev","substring","fetchInvoiceImages","handleInputChange","name","[object Object]","updateConvertedAmount","updatedInvoice","toFixed","handleCloseFullScreen","stopPropagation","map","option","index","key","readOnly","Array","isArray","length","image","src","imageUrl","alt","onClick","handleImageClick","multiple","files","from","accept","handleSubmit","window","location","reload","InvoiceManagement","invoices","setInvoices","useContext","userEmail","setUserEmail","showPopup","setShowPopup","showMailPopup","setShowMailPopup","popupMode","setPopupMode","selectedInvoice","setSelectedInvoice","recipientEmail","setRecipientEmail","formattedInvoices","split","fetchInvoices","email","fetchUserEmail","formData","FormData","forEach","append","headers","Content-Type","createdBy","put","log","emailData","to","subject","body","invoiceId","role","handleEditInvoice","confirm","delete","handleDeleteInvoice","handleSendMail","UserManagement","users","setUsers","selectedUser","setSelectedUser","formValues","setFormValues","fetchUsers","handleAddUser","handleUpdateUser","handleEditUser","handleDeleteUser","PrivateRoute","allowedRoles","children","includes","Navigate","Navbar","Fragment","Link","handleLogout","removeItem","href","App","savedUser","getItem","parse","Provider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.879ff262.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\n\nconst LoginPage = ({ setUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/api/login', { username, password });\n      if (response.data.success) {\n        // console.log(\"User logged in successfully:\", response.data.user); // Debug log for success\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        setUser(response.data.user); // Update global state with the user\n        navigate('/invoices');\n      } else {\n        alert('Login failed. Please check your credentials.');\n      }\n    } catch (error) {\n      console.error('Login Error:', error);\n      alert('Login failed. Please check your credentials.');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h2>Login</h2>\n        <form onSubmit={handleLogin}>\n          <input \n            type=\"text\" \n            value={username} \n            onChange={(e) => setUsername(e.target.value)} \n            placeholder=\"Username\" \n            required \n          />\n          <input \n            type=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)} \n            placeholder=\"Password\" \n            required \n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { createContext, useState, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    // Initialize user from localStorage on first load\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  useEffect(() => {\n    // Sync state with localStorage whenever user changes\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n\n  const login = (userData) => {\n    setUser(userData);\n  };\n\n  const logout = () => {\n    setUser(null);\n    window.location.href = '/';\n  };\n\n  return (\n    <UserContext.Provider value={{ user, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './InvoiceFormPopup.css';\n\nconst InvoiceFormPopup = ({ invoice, onSave, onClose, receiptTypes }) => {\n  const [formInvoice, setFormInvoice] = useState(\n    invoice || {\n      invoiceNumber: '',\n      receiptNumber: '',\n      date: '',\n      time: '',\n      receiptType: '',\n      narrative: '',\n      amount: '',\n      currency: '',\n      images: [],\n      existingImages: [],\n      targetCurrency: '', // Added field for target currency\n      conversionRate: 1, // Added field for conversion rate\n      convertedAmount: '', // Added field for converted amount\n    }\n  );\n\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [imageToDelete, setImageToDelete] = useState(null);\n\n  // List of all available currencies\n  const availableCurrencies = [\n    'USD', 'EUR', 'GBP', 'CAD', 'AUD', 'JPY', 'CHF', 'CNY', 'INR', 'BRL', 'MXN', 'SEK', \n    'NOK', 'DKK', 'ZAR', 'SGD', 'HKD', 'NZD', 'KRW', 'TRY', 'RUB', 'AED'\n    // Add more currencies if needed\n  ];\n\n  useEffect(() => {\n    const fetchInvoiceImages = async () => {\n      if (invoice) {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/invoices/${invoice.id}/images`);\n          if (response.data && response.data.images) {\n            setFormInvoice((prev) => ({\n              ...prev,\n              existingImages: response.data.images,\n              time: invoice.time ? invoice.time.substring(0, 5) : '', // Set time to `HH:MM` format for editing\n            }));\n          }\n        } catch (error) {\n          console.error(`Failed to fetch images for invoice ${invoice.id}`, error);\n        }\n      }\n    };\n\n    fetchInvoiceImages();\n  }, [invoice]);\n\n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    // Handle time format properly\n    if (name === 'time') {\n      // Convert `HH:MM` from input to `HH:MM:00` format for storage\n      setFormInvoice({ ...formInvoice, [name]: `${value}:00` });\n    } else {\n      setFormInvoice({ ...formInvoice, [name]: value });\n\n      // Update converted amount if relevant fields are changed\n      if (name === 'amount' || name === 'conversionRate' || name === 'targetCurrency') {\n        updateConvertedAmount({ ...formInvoice, [name]: value });\n      }\n    }\n  };\n\n  // Update converted amount whenever amount, conversion rate, or target currency changes\n  const updateConvertedAmount = (updatedInvoice) => {\n    const { amount, conversionRate, targetCurrency } = updatedInvoice;\n    if (amount && conversionRate && targetCurrency) {\n      const convertedAmount = (amount * conversionRate).toFixed(2);\n      setFormInvoice((prev) => ({ ...prev, convertedAmount }));\n    } else {\n      setFormInvoice((prev) => ({ ...prev, convertedAmount: '' }));\n    }\n  };\n\n  // Handle the change in images\n  const handleImageChange = (e) => {\n    const files = Array.from(e.target.files);\n    setFormInvoice({ ...formInvoice, images: files });\n  };\n\n  // Handle removing an existing image\n  const handleRemoveExistingImage = (imageUrl) => {\n    setImageToDelete(imageUrl);\n  };\n\n  // Confirm delete of existing image\n  const handleConfirmDeleteImage = async () => {\n    if (imageToDelete) {\n      try {\n        await axios.delete(`http://localhost:5001/api/invoices/images`, {\n          data: { imageUrl: imageToDelete },\n        });\n        setFormInvoice({\n          ...formInvoice,\n          existingImages: formInvoice.existingImages.filter((img) => img.imageUrl !== imageToDelete),\n        });\n        setImageToDelete(null);\n      } catch (error) {\n        console.error('Failed to delete image', error);\n      }\n    }\n  };\n\n  // Cancel delete image\n  const handleCancelDeleteImage = () => {\n    setImageToDelete(null);\n  };\n\n  // Handle displaying an image in fullscreen\n  const handleImageClick = (imageUrl) => {\n    setFullScreenImage(imageUrl);\n  };\n\n  // Close fullscreen image view\n  const handleCloseFullScreen = (e) => {\n    e.stopPropagation(); // Prevent any other click events when closing\n    setFullScreenImage(null);\n  };\n\n  // Handle form submission\n  const handleSubmit = () => {\n    onSave(formInvoice);\n    alert(invoice ? 'Invoice updated successfully!' : 'Invoice added successfully!');\n    // Refresh the page after the alert\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"popup-overlay fancy-popup\">\n      <div className=\"popup fancy-popup-window\">\n        <h3>{invoice ? 'Edit Invoice' : 'Add Invoice'}</h3>\n        <input\n          type=\"text\"\n          name=\"invoiceNumber\"\n          placeholder=\"Invoice Number\"\n          value={formInvoice.invoiceNumber}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"receiptNumber\"\n          placeholder=\"Receipt Number\"\n          value={formInvoice.receiptNumber}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          placeholder=\"Date\"\n          value={formInvoice.date}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"time\"\n          name=\"time\"\n          placeholder=\"Time\"\n          value={formInvoice.time.substring(0, 5)} // Set time in `HH:MM` format for input\n          onChange={handleInputChange}\n        />\n        <select\n          name=\"receiptType\"\n          value={formInvoice.receiptType}\n          onChange={handleInputChange}\n        >\n          <option value=\"\">Select Receipt Type</option>\n          {receiptTypes.map((option, index) => (\n            <option key={index} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n        <textarea\n          name=\"narrative\"\n          placeholder=\"Narrative\"\n          value={formInvoice.narrative}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\"Amount\"\n          value={formInvoice.amount}\n          onChange={handleInputChange}\n        />\n\n        {/* Dropdown for selecting currency */}\n        <select\n          name=\"currency\"\n          value={formInvoice.currency}\n          onChange={handleInputChange}\n        >\n          <option value=\"\">Select Currency</option>\n          {availableCurrencies.map((currency, index) => (\n            <option key={index} value={currency}>\n              {currency}\n            </option>\n          ))}\n        </select>\n\n        {/* Converting Currency Section */}\n        <select\n          name=\"targetCurrency\"\n          value={formInvoice.targetCurrency}\n          onChange={handleInputChange}\n        >\n          <option value=\"\">Select Target Currency</option>\n          {availableCurrencies.map((currency, index) => (\n            <option key={index} value={currency}>\n              {currency}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          name=\"conversionRate\"\n          placeholder=\"Conversion Rate\"\n          value={formInvoice.conversionRate}\n          onChange={(e) => {\n            handleInputChange(e);\n            updateConvertedAmount({ ...formInvoice, conversionRate: e.target.value });\n          }}\n        />\n        <input\n          type=\"text\"\n          name=\"convertedAmount\"\n          placeholder=\"Converted Amount\"\n          value={formInvoice.convertedAmount}\n          readOnly\n        />\n\n        {/* Show Existing Images */}\n        {Array.isArray(formInvoice.existingImages) && formInvoice.existingImages.length > 0 && (\n          <div className=\"existing-images\">\n            <h4>Existing Images</h4>\n            <div className=\"existing-images-list\">\n              {formInvoice.existingImages.map((image, index) => (\n                <div key={index} className=\"existing-image-item\">\n                  <img\n                    src={`http://localhost:5001/${image.imageUrl}`}\n                    alt={`Invoice ${formInvoice.invoiceNumber} Image ${index + 1}`}\n                    className=\"invoice-image-thumbnail\"\n                    onClick={() => handleImageClick(image.imageUrl)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Upload New Images */}\n        <input\n          type=\"file\"\n          name=\"images\"\n          multiple\n          onChange={handleImageChange}\n          accept=\"image/*\"\n        />\n\n        <div className=\"popup-buttons\">\n          <button onClick={handleSubmit} className=\"fancy-button\">\n            {invoice ? 'Update Invoice' : 'Add Invoice'}\n          </button>\n          <button onClick={onClose} className=\"fancy-button cancel-button\">\n            Cancel\n          </button>\n        </div>\n      </div>\n\n      {/* Full Screen Image View */}\n      {fullScreenImage && (\n        <div className=\"full-screen-overlay\" onClick={handleCloseFullScreen}>\n          <div className=\"full-screen-image-container\">\n            <img\n              src={`http://localhost:5001/${fullScreenImage}`}\n              alt=\"Full Screen\"\n              className=\"full-screen-image\"\n            />\n            <button\n              type=\"button\"\n              className=\"close-full-screen-button fancy-button\"\n              onClick={handleCloseFullScreen}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InvoiceFormPopup;\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\nimport InvoiceFormPopup from './InvoiceFormPopup';\nimport './InvoiceManagement.css';\n\nconst InvoiceManagement = () => {\n  const [invoices, setInvoices] = useState([]);\n  const { user } = useContext(UserContext);\n  const [userEmail, setUserEmail] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [showMailPopup, setShowMailPopup] = useState(false);\n  const [popupMode, setPopupMode] = useState(''); // 'add', 'edit', 'delete', or 'send'\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [receiptTypes] = useState(['Invoice', 'Gas', 'Support Office', 'Other']);\n\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/invoices');\n        if (response.data && Array.isArray(response.data.invoices)) {\n          const formattedInvoices = response.data.invoices.map((invoice) => ({\n            ...invoice,\n            date: invoice.date.split('T')[0], // Extract only yyyy-mm-dd from date\n          }));\n          setInvoices(formattedInvoices);\n        } else {\n          console.error('Unexpected response format', response.data);\n          setInvoices([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch invoices', error);\n      }\n    };\n\n    const fetchUserEmail = async () => {\n      if (user?.username) {\n        // for debuging\n        // console.log('Fetching email for user:', user.username);\n        try {\n          const response = await axios.get(`http://localhost:5001/api/users/username/${user.username}`);\n          if (response.data && response.data.user) {\n            setUserEmail(response.data.user.email);\n          } else {\n            console.error('User email not found');\n          }\n        } catch (error) {\n          console.error('Failed to fetch user email', error);\n        }\n      }\n    };\n\n    fetchInvoices();\n    fetchUserEmail();\n  }, [user]);\n\n  const handleAddInvoice = async (invoice) => {\n    try {\n      const formData = new FormData();\n      for (const key in invoice) {\n        if (key === 'images' && invoice.images.length > 0) {\n          invoice.images.forEach((image) => formData.append('images', image));\n        } else {\n          formData.append(key, invoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info\n      formData.append('createdBy', user?.username || user?.id || 'Unknown');\n\n      const response = await axios.post('http://localhost:5001/api/invoices', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice added successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to add invoice', error);\n    }\n  };\n\n  const handleEditInvoice = (invoice) => {\n    setSelectedInvoice(invoice);\n    setPopupMode('edit');\n    setShowPopup(true);\n  };\n\n  const handleUpdateInvoice = async (updatedInvoice) => {\n    try {\n      const formData = new FormData();\n      for (const key in updatedInvoice) {\n        if (key === 'images' && updatedInvoice.images.length > 0) {\n          updatedInvoice.images.forEach((image) => formData.append('images', image));\n        } else {\n          formData.append(key, updatedInvoice[key]);\n        }\n      }\n\n      // Add createdBy field with the current user's info if not already set\n      if (!updatedInvoice.createdBy) {\n        formData.append('createdBy', user?.username || user?.id || 'Unknown');\n      }\n\n      const response = await axios.put(`http://localhost:5001/api/invoices/${updatedInvoice.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      if (response.data && response.data.success) {\n        alert('Invoice updated successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to update invoice', error);\n    }\n  };\n\n  const handleDeleteInvoice = async (id) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this invoice?');\n    if (confirmDelete) {\n      try {\n        const response = await axios.delete(`http://localhost:5001/api/invoices/${id}`);\n        if (response.data && response.data.success) {\n          alert('Invoice deleted successfully!');\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error('Failed to delete invoice', error);\n      }\n    }\n  };\n\n  const handleSendMail = (invoice) => {\n    setSelectedInvoice(invoice);\n    setPopupMode('send');\n    setShowMailPopup(true);\n  };\n\n  const handleSendMailSubmit = async () => {\n    console.log('Email from:', userEmail);\n    try {\n      if (!userEmail) {\n        console.error('User email is missing. Cannot send email.');\n        alert('Failed to send email. User email is missing.');\n        return;\n      }\n\n      const emailData = {\n        from: userEmail, // Use the fetched email\n        to: recipientEmail,\n        subject: `Summary Receipt Number (${selectedInvoice.receiptNumber}) and Invoice Number (${selectedInvoice.invoiceNumber})`,\n        body: `Here are the details of the invoice:\\n\\nReceipt Number: ${selectedInvoice.receiptNumber}\\nInvoice Number: ${selectedInvoice.invoiceNumber}\\nDate: ${selectedInvoice.date}\\nTime: ${selectedInvoice.time}\\nReceipt Type: ${selectedInvoice.receiptType}\\nNarrative: ${selectedInvoice.narrative}\\nAmount: ${selectedInvoice.amount}\\nCurrency: ${selectedInvoice.currency}`,\n        invoiceId: selectedInvoice.id, // Include the invoice ID for retrieving images\n      };\n\n      console.log('Sending email with payload:', emailData);\n\n      const response = await axios.post('http://localhost:5001/api/send-mail', emailData);\n      if (response.data && response.data.success) {\n        alert('Email sent successfully!');\n        setShowMailPopup(false);\n      } else {\n        alert('Failed to send email.');\n      }\n    } catch (error) {\n      console.error('Failed to send email', error);\n      alert('An error occurred while sending the email.');\n    }\n  };\n\n  return (\n    <div className=\"invoice-container\">\n      <h2>Invoices</h2>\n      <button className=\"add-invoice-button fancy-button\" onClick={() => { setPopupMode('add'); setShowPopup(true); }}>Add Invoice</button>\n\n      {showPopup && (\n        <InvoiceFormPopup\n          invoice={popupMode === 'edit' ? selectedInvoice : null}\n          onSave={popupMode === 'add' ? handleAddInvoice : handleUpdateInvoice}\n          onClose={() => setShowPopup(false)}\n          receiptTypes={receiptTypes}\n        />\n      )}\n\n      {showMailPopup && (\n        <div className=\"popup-overlay fancy-popup\">\n          <div className=\"popup fancy-popup-window\">\n            <h3>Send Invoice Email</h3>\n            <input\n              type=\"email\"\n              name=\"recipientEmail\"\n              placeholder=\"Recipient Email\"\n              value={recipientEmail}\n              onChange={(e) => setRecipientEmail(e.target.value)}\n            />\n            <div className=\"popup-buttons\">\n              <button onClick={handleSendMailSubmit} className=\"fancy-button\">Send Email</button>\n              <button onClick={() => setShowMailPopup(false)} className=\"fancy-button cancel-button\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <table className=\"invoice-table fancy-table\">\n        <thead>\n          <tr>\n            <th>Invoice Number</th>\n            <th>Receipt Number</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Receipt Type</th>\n            <th>Narrative</th>\n            <th>Amount</th>\n            <th>Currency</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {invoices.map((invoice) => (\n            <tr key={invoice.id} className=\"fancy-table-row\">\n              <td>{invoice.invoiceNumber}</td>\n              <td>{invoice.receiptNumber}</td>\n              <td>{invoice.date}</td>\n              <td>{invoice.time}</td>\n              <td>{invoice.receiptType}</td>\n              <td>{invoice.narrative}</td>\n              <td>{invoice.amount}</td>\n              <td>{invoice.currency}</td>\n              <td>\n                {user?.role !== 'viewer' && (\n                  <div className=\"action-buttons\">\n                    <button className=\"fancy-button edit-button\" onClick={() => handleEditInvoice(invoice)}>Edit</button>\n                    <button className=\"fancy-button delete-button\" onClick={() => handleDeleteInvoice(invoice.id)}>Delete</button>\n                    <button className=\"fancy-button mail-button\" onClick={() => handleSendMail(invoice)}>Send Mail</button>\n                  </div>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default InvoiceManagement;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserManagement.css';\n\nconst UserManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMode, setPopupMode] = useState(''); // 'add' or 'edit'\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formValues, setFormValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    role: 'viewer', // default role\n  });\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/users');\n        if (response.data && Array.isArray(response.data.users)) {\n          setUsers(response.data.users);\n        } else {\n          console.error('Unexpected response format', response.data);\n          setUsers([]);\n        }\n      } catch (error) {\n        console.error('Failed to fetch users', error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleAddUser = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/users', formValues);\n      if (response.data && response.data.success) {\n        alert('User added successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to add user', error);\n    }\n  };\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user);\n    setFormValues({\n      username: user.username,\n      email: user.email,\n      password: '',\n      role: user.role,\n    });\n    setPopupMode('edit');\n    setShowPopup(true);\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      const response = await axios.put(`http://localhost:5001/api/users/${selectedUser.id}`, formValues);\n      if (response.data && response.data.success) {\n        alert('User updated successfully!');\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Failed to update user', error);\n    }\n  };\n\n  const handleDeleteUser = async (id) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this user?');\n    if (confirmDelete) {\n      try {\n        const response = await axios.delete(`http://localhost:5001/api/users/${id}`);\n        if (response.data && response.data.success) {\n          alert('User deleted successfully!');\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error('Failed to delete user', error);\n      }\n    }\n  };\n\n  const handleSubmit = () => {\n    if (popupMode === 'add') {\n      handleAddUser();\n    } else if (popupMode === 'edit') {\n      handleUpdateUser();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  return (\n    <div className=\"user-container\">\n      <h2>Users</h2>\n      <button className=\"add-user-button fancy-button\" onClick={() => { setPopupMode('add'); setShowPopup(true); }}>Add User</button>\n\n      {showPopup && (\n        <div className=\"popup-overlay fancy-popup\">\n          <div className=\"popup fancy-popup-window\">\n            <h3>{popupMode === 'add' ? 'Add User' : 'Edit User'}</h3>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={formValues.username}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={formValues.email}\n              onChange={handleInputChange}\n            />\n            {popupMode === 'add' && (\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={formValues.password}\n                onChange={handleInputChange}\n              />\n            )}\n            <select\n              name=\"role\"\n              value={formValues.role}\n              onChange={handleInputChange}\n              className=\"role-dropdown\"\n            >\n              <option value=\"admin\">Admin</option>\n              <option value=\"editor\">Editor</option>\n              <option value=\"viewer\">Viewer</option>\n            </select>\n            <div className=\"popup-buttons\">\n              <button onClick={handleSubmit} className=\"fancy-button\">{popupMode === 'add' ? 'Add User' : 'Update User'}</button>\n              <button onClick={() => setShowPopup(false)} className=\"fancy-button cancel-button\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <table className=\"user-table fancy-table\">\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Role</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id} className=\"fancy-table-row\">\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n              <td>{user.role}</td>\n              <td>\n                <div className=\"action-buttons\">\n                  <button className=\"fancy-button edit-button\" onClick={() => handleEditUser(user)}>Edit</button>\n                  <button className=\"fancy-button delete-button\" onClick={() => handleDeleteUser(user.id)}>Delete</button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UserManagement;\n","import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\n\nconst PrivateRoute = ({ allowedRoles, children }) => {\n  const { user } = useContext(UserContext);\n\n  if (!user) {\n    // User not logged in, redirect to login page\n    return <Navigate to=\"/\" />;\n  }\n\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // User does not have permission, redirect to login page\n    return <Navigate to=\"/\" />;\n  }\n\n  // User is authenticated and has the correct role, render the children\n  return children;\n};\n\nexport default PrivateRoute;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const { user, setUser } = useContext(UserContext);\n\n  const handleLogout = () => {\n    // Clear user data from local storage\n    localStorage.removeItem('user');\n    \n    // Set user state to null to clear user session\n    setUser(null);\n\n    // Redirect to login page after logging out\n    window.location.href = '/login';\n  };\n\n  // console.log(\"Navbar User Context Value:\", user); // Debug log to verify the user\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-links\">\n        {user && (\n          <>\n            <Link to=\"/invoices\" className=\"navbar-link\">Invoices</Link>\n            {user?.role === 'admin' && <Link to=\"/users\" className=\"navbar-link\">User Management</Link>}\n            <button onClick={handleLogout} className=\"navbar-button\">Logout</button>\n          </>\n        )}\n        {!user && (\n          <Link to=\"/login\" className=\"navbar-link\">Login</Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport InvoiceManagement from './pages/InvoiceManagement';\nimport UserManagement from './pages/UserManagement';\nimport PrivateRoute from './components/PrivateRoute';\nimport Navbar from './components/Navbar';\nimport { UserContext } from './context/UserContext';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Navbar />\n        <Routes>\n          {/* If user is logged in, navigate to invoices, otherwise to login */}\n          <Route path=\"/\" element={user ? <Navigate to=\"/invoices\" /> : <LoginPage setUser={setUser} />} />\n          <Route\n            path=\"/invoices\"\n            element={\n              user ? (\n                <PrivateRoute allowedRoles={['admin', 'editor', 'viewer']}>\n                  <InvoiceManagement />\n                </PrivateRoute>\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n          <Route\n            path=\"/users\"\n            element={\n              user ? (\n                <PrivateRoute allowedRoles={['admin']}>\n                  <UserManagement />\n                </PrivateRoute>\n              ) : (\n                <Navigate to=\"/\" />\n              )\n            }\n          />\n        </Routes>\n      </Router>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}